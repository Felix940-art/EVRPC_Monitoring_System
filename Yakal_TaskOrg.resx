<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>